import os, sys
import math
from sympy import symbols, Eq, solve, isprime

Claire = 55273261062570739681010264595985371041157840964648656831930400272737039051430695674550183993431603054374880300877866371203703300049061418870293778716525555247365050420028002442131265779903318995941773493556476607657153053218574982820087953280789103385312094407675291305458162527974571222555474239698408297655
Nathan = 153714532490089638943440634302019370342638608386188440189192881959783074929820051906805863823269977439739733231721387770580587594320151476754629097982403461226289675323251915760027800804005182177165783713748324981002579198192281535526965247490607524643201527405171997320378953992645479404509890009940909631067
Philip = 153714532490089638943440634302019370342638608386188440189192881959783074929820051906805863823269977439739733231721387770580587594320151476754629097982403436388791287276107415728051491146797733733411303766258638176554078971606079872243153617094791186111510668210382280965706717937271892055556008324676561808976

def pgcd_etendu(a,b):
    x,xx=1,0
    y,yy=0,1
    while b!=0:
        q=a//b
        a,b=b,a%b
        xx, x = x-q*xx, xx
        yy, y = y-q*yy, yy
    return a, x ,y

p, q = symbols('p q')
equations = [Eq(Nathan, p*q), Eq(Philip, (p-1)*(q-1))]
solutions_p_q = solve(equations, (p, q))
portia, quincy = solutions_p_q[1][0], solutions_p_q[1][1]
edgar = int(str(portia)[:32]) + int(str(quincy)[:32])
while not isprime(edgar):
    edgar+=1
a,d,v = pgcd_etendu(edgar,Philip)
m = pow(Claire,d,Nathan)
ptxt = bytes.fromhex(hex(m)[2:])
with open(os.getcwd()+'/plain.txt','wb') as fptxt:
    fptxt.write(ptxt)
    